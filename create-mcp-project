#!/bin/bash

# MCP Server Project Generator - Bash Wrapper
# This script provides a convenient way to create new MCP server projects

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_color() {
    printf "${1}${2}${NC}\n"
}

# Function to show help
show_help() {
    cat << EOF
üîß MCP Server Project Generator

Usage:
    $0 <project-name> [options]

Arguments:
    <project-name>    Name of the new MCP server project (kebab-case)

Options:
    --description <desc>    Project description
    --author <name>         Author name  
    --target-dir <dir>      Target directory (default: mcp-<project-name>)
    --install-deps          Install npm dependencies automatically
    --no-git               Skip git repository initialization
    --help, -h             Show this help message

Examples:
    $0 weather-service
    $0 task-manager --description "Task management MCP server" --author "John Doe"
    $0 file-processor --target-dir ./my-server --install-deps

Requirements:
    - Node.js 20+ 
    - npm
    - git (optional, for repository initialization)

EOF
}

# Check if Node.js is installed
check_node() {
    if ! command -v node &> /dev/null; then
        print_color $RED "‚ùå Error: Node.js is not installed"
        print_color $YELLOW "Please install Node.js 20+ from https://nodejs.org/"
        exit 1
    fi

    # Check Node.js version
    node_version=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$node_version" -lt 18 ]; then
        print_color $RED "‚ùå Error: Node.js version $node_version is too old"
        print_color $YELLOW "Please upgrade to Node.js 20+ from https://nodejs.org/"
        exit 1
    fi
}

# Check if npm is installed
check_npm() {
    if ! command -v npm &> /dev/null; then
        print_color $RED "‚ùå Error: npm is not installed"
        print_color $YELLOW "Please install npm (usually comes with Node.js)"
        exit 1
    fi
}

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
SETUP_SCRIPT="$SCRIPT_DIR/setup-new-project.js"

# Check if the setup script exists
if [ ! -f "$SETUP_SCRIPT" ]; then
    print_color $RED "‚ùå Error: setup-new-project.js not found in $SCRIPT_DIR"
    print_color $YELLOW "Make sure you're running this script from the MCP template directory"
    exit 1
fi

# Show help if no arguments or help flag
if [ $# -eq 0 ] || [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    show_help
    exit 0
fi

# Check prerequisites
print_color $BLUE "üîç Checking prerequisites..."
check_node
check_npm

# Run the Node.js setup script
print_color $GREEN "üöÄ Starting MCP server project generation..."
exec node "$SETUP_SCRIPT" "$@" 